{% extends 'base.html.twig' %}
{% block stylesheets %}
    <link rel="stylesheet" href="{{ asset('css/messenger.css') }}">
{% endblock %}

{% block title %}Messenger{% endblock %}

{% block body %}

    {% for message in app.flashes('danger') %}
        <div class="alert alert-danger">
            {{ message }}
        </div>
    {% endfor %}


    <div class="container py-5 px-4">
        <div class="row rounded-lg overflow-hidden shadow">
            <input id="currentUserId" type="hidden" name="conversationId" value="{{ app.user.id }}">
            <!-- Users box-->
            <div class="col-12 col-lg-5 px-0">
                <div class="bg-white">

                    <div class="bg-gray px-4 py-2 bg-light d-flex justify-content-between align-items-center">
                        <p class="h5 mb-0 py-1">Conversations</p>
                        <a title="Nouvelle conversation" data-toggle="modal" data-target="#basicExampleModal"><i style="color: #1D283B !important" class="fas fa-user-plus"></i></a>
                    </div>

                    <div class="messages-box">
                        <div id="blocConversations" class="list-group rounded-0">


                        </div>
                    </div>
                </div>
            </div>
            <!-- Chat Box-->
            <div class="col-12 col-lg-7 px-0">
                <div id="blocMessages" class="px-4 py-5 chat-box bg-white">



                <!-- Typing area -->


            </div>
                    <div class="input-group">
                        <input id="form-message" type="hidden">
                        <input type="text" id="message-content-form" placeholder="Écrivez votre message" aria-describedby="button-addon2" class="form-control rounded-0 border-0 py-4 bg-light">
{#                        <div class="input-group-append">
                            <button id="button-addon2" type="submit" class="btn btn-link"> <i class="fa fa-paper-plane"></i></button>
                        </div>#}
                    </div>
        </div>
    </div>
    <!-- Modal -->
    <div class="modal fade" id="basicExampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
         aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Nouvelle conversation</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <form action="{{ path('create_conversation') }}" method="post" id="form-conversation">
                <div class="modal-body">
                    <select name="user" class="mdb-select md-form" searchable="Chercher un utilisateur">
                        <option value="" disabled selected>Utilisateurs</option>
                        {% for user in users %}
                            <option data-icon="{{asset("uploads/avatars/"~user.avatar.avatarIcon)}}" class="rounded-circle" value="{{ user.id }}">{{ user.firstName }} {{ user.lastName }}</option>
                        {% endfor %}
                    </select>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-dismiss="modal">Fermer</button>
                    <button type="submit" id="btn-add-conversation" class="btn btn-primary">Créer</button>
                </div>
                </form>
            </div>
        </div>
    </div>


    <script>


        document.addEventListener("DOMContentLoaded", function(event) {

            let conversation = document.querySelectorAll('.conversation');
            let blocMessages = document.querySelector('#blocMessages');
            let blocConversations = document.querySelector('#blocConversations');
            let currentUserId = parseInt(document.querySelector('#currentUserId').value);
            let formMessageId = document.querySelector('#form-message');
            let date;

            var xhr = new XMLHttpRequest();

            function callConversation(){
            xhr.open('GET', '{{ path('get_conversations') }}', true);
            xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
            xhr.onreadystatechange = function() { //Appelle une fonction au changement d'état.
                if (this.readyState === XMLHttpRequest.DONE && this.status === 200) {

                    let data = xhr.response;
                    getConversations(data, date, blocConversations, blocMessages, formMessageId, xhr, currentUserId);

                    /*  getConversationMessages(data, date, blocMessages, currentUserId);
                      blocMessages.scroll(0,3000000);*/


                }
            }
            xhr.responseType = 'json';
            xhr.send();
            }
            callConversation();


            document.addEventListener('keypress', function (e){
                if(e.key === 'Enter'){
                    // Current user = currentUserId
                    // Conversation id = formMessageId.value
                    //let paramConversationId = parseInt(formMessageId.value);

                    let messageConversation = document.querySelector('#message-content-form').value,
                        messageText = document.getElementById('message-content-form');

                    const paramsMessage = {
                        "conversationId" : parseInt(formMessageId.value),
                        "message" : document.querySelector('#message-content-form').value
                    }

                        xhr.open('POST', '{{ path('add_new_message') }}', true);
                        xhr.setRequestHeader('Content-Type', 'application/json');
                        xhr.onreadystatechange = function () { //Appelle une fonction au changement d'état.
                            if (this.readyState === XMLHttpRequest.DONE && this.status === 200) {
                                blocMessages.innerHTML = "";
                                let data = xhr.response;
                                getConversationMessages(data, date, blocMessages, currentUserId);
                                messageText.value = "";
                                blocMessages.scroll(0, 3000000);
                                callConversation();


                            }
                        }
                        xhr.responseType = 'json';
                        xhr.send(JSON.stringify(paramsMessage));
                    }
            })

            setInterval(function(){
               callConversation();

            }, 2000);

        });

        function getConversations(data, date, blocConversations, blocMessages, formMessageId, xhr, currentUserId){

            blocConversations.innerHTML = "";
            let lastMessages;
            for (let i = 0; i < data.length; i++) {

                if(data[i].lastMessageDate !== null){
                    date = new Date(data[i].lastMessageDate.date);
                    date = date.toLocaleString();
                }
                else{
                    date = "";
                }
                if(data[i].lastMessage !== null){
                   lastMessages = data[i].lastMessage;
                }
                else{
                    lastMessages = "";
                }


                let eachBlocConversation = document.createElement("a");
                eachBlocConversation.setAttribute('class', 'list-group-item list-group-item-action list-group-item-light rounded-0 conversation')
                eachBlocConversation.setAttribute('id', "btn-"+data[i].id);
                eachBlocConversation.innerHTML = `

                                            <div class="media"><img src="/uploads/avatars/${data[i].avatar}" alt="user" width="50" class="rounded-circle">
                                                <div class="media-body ml-4">
                                                    <div class="d-flex align-items-center justify-content-between mb-1">
                                                        <h6 class="mb-0">
                                                            ${data[i].userFirstName} ${data[i].userLastName}
                                                        </h6>
                                                        <small class="small font-weight-bold">
                                                            ${date}
                                                        </small>
                                                    </div>
                                                    <p class="font-italic text-muted mb-0 text-small">${lastMessages}</p>
                                                </div>
                                            </div>
                                        `;

                blocConversations.appendChild(eachBlocConversation);

            }

            let conversation = document.querySelectorAll('.conversation');

            conversation.forEach(e => e.addEventListener('click', function(){

                blocMessages.innerHTML = "";
                // effacer la conversation
                let conversationId = this.id.split('-');
                let id = parseInt(conversationId[1]);


                formMessageId.value = id;


                xhr.open('POST', '{{ path('get_conversation_messages') }}', true);
                xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
                xhr.onreadystatechange = function() { //Appelle une fonction au changement d'état.
                    if (this.readyState === XMLHttpRequest.DONE && this.status === 200) {

                        let data = xhr.response;

                        getConversationMessages(data, date, blocMessages, currentUserId);
                        blocMessages.scroll(0,3000000);


                    }
                }
                xhr.responseType = 'json';
                xhr.send(id);


                function refreshMessages(id, blocMessages, currentUserId, date){

                    setInterval(function (){
                        xhr.open('POST', '{{ path('get_conversation_messages') }}', true);
                        xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
                        xhr.onreadystatechange = function() { //Appelle une fonction au changement d'état.
                            if (this.readyState === XMLHttpRequest.DONE && this.status === 200) {
                                blocMessages.innerHTML = "";
                                let data = xhr.response;

                                getConversationMessages(data, date, blocMessages, currentUserId);
                                blocMessages.scroll(0,3000000);


                            }
                        }
                        xhr.responseType = 'json';
                        xhr.send(id);
                    }, 2000)

                }

                refreshMessages(id, blocMessages, currentUserId, date);
            }))
        }

        function getConversationMessages(data, date, blocMessages, currentUserId){
            blocMessages.innerHTML = "";

            for (let i = 0; i < data.length; i++){
                if(data[i].user.id === currentUserId){

                    date = new Date(data[i].postedAt.date);
                    date = date.toLocaleString();
                    let divUserCurrent = document.createElement("div");
                    divUserCurrent.setAttribute('class', 'media w-50 ml-auto mb-3')
                    divUserCurrent.innerHTML = `
                                                        <div class="media-body">
                                                        <div class="bg-primary rounded py-2 px-3 mb-2">
                                                        <p class="text-small mb-0 text-white">${data[i].message}</p>
                                                        </div>
                                                        <p class="small text-muted"  style="white-space: nowrap;">${date}</p>
                                                        </div>
                                                        `;


                    blocMessages.appendChild(divUserCurrent);
                }
                else{
                    date = new Date(data[i].postedAt.date);
                    date = date.toLocaleString();
                    let userDistant = document.createElement("div");
                    userDistant.setAttribute('class', 'media w-50 mb-3')
                    userDistant.innerHTML = `
                                                         <div class="media w-50 mb-3">
                                                              <img src="/uploads/avatars/${data[i].user.avatar}" alt="user" width="50" class="rounded-circle">
                                                            <div class="media-body ml-3">
                                                                <div class="bg-light rounded py-2 px-3 mb-2">
                                                                    <p class="text-small mb-0 text-muted">${data[i].message}</p>
                                                                </div>
                                                                <p class="small text-muted" style="white-space: nowrap;">${date}</p>
                                                            </div>
                                                         </div>
                                                        `;


                    blocMessages.appendChild(userDistant);
                }
            }

        }



    </script>

{% block javascripts %}{% endblock %}

{% endblock %}