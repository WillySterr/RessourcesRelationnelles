{% extends 'base.html.twig' %}

{% block title %}Fil d'actualité{% endblock %}
{% block stylesheets %}
    <style>
        ul{
            list-style-type: none;
        }
    
    </style>
{% endblock %}
{% block body %}

<div class="container mt-5">
        <div class="my-5 pb-3">
        
            <h5>Filtrer les ressources</h5>
            <ul class="list-group">
            {% for category in categories %}
                <li class="list-group-item"><input id="checkbox-{{ category.id }}" class="form-check-input filters" type="checkbox"><label class="form-check-label" for="checkbox-{{category.id}}">{{ category.name }} </label></li>
            {% endfor %}
            </ul>
            <h5 class="mt-3">Trier les ressources</h5>
            <select class="form-control" id="tri">
                <option class="tries" disabled selected>Sélectionnez un tri</option>
                <option class="tries" value="decroissant">Du + récent au - récent</option>    
                <option class="tries" value="croissant">Du - récent au + récent</option>    
            </select>
        </div>

    <div id="boxFilActu" class="row justify-content-center">
    
    {# {% for new in news %}

         {% include 'news_feed/photo.html.twig' %}

         {% include 'news_feed/articles.html.twig' %}

         {% include 'news_feed/video.html.twig' %}

         {% include 'news_feed/informations.html.twig' %}

         {% include 'news_feed/evenement.html.twig' %}
      
    {% endfor %} #}

    </div>



</div>
{% endblock %}

{% block javascripts %}
    <script>

        document.addEventListener('DOMContentLoaded', function(){
            const xhr = new XMLHttpRequest();
            let comments = document.querySelectorAll('.all-comments');
            let ressourcesBox = document.querySelector('#boxFilActu');
            let requestParams = {
                idCheck : [],
                idTri: []
            }
            let id, commentBox;
            sendFilters(requestParams, ressourcesBox);
            initCommentsNewFeed();


            comments.forEach(comment => comment.addEventListener('click', function(e){
                let ressourceId = this.id.split('-');
                id = parseInt(ressourceId[1]);
                commentBox = document.querySelector('#comments-box-'+id);
            }))
            comments.forEach(comment => comment.addEventListener('keypress', function(e){
                if(e.key === "Enter"){
                    const requestParams = {
                        "idRessource" : id,
                        "comments": comment.value
                    }

                    xhr.open('POST', '{{ path('new_comments') }}', true);
                    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
                    xhr.onreadystatechange = function() { //Appelle une fonction au changement d'état.
                        if (this.readyState === XMLHttpRequest.DONE && this.status === 200) {
                            initCommentsNewFeed(xhr);
                            comment.value = "";
                        }
                    }
                    xhr.responseType = 'json';
                    xhr.send(JSON.stringify(requestParams));
                }
            }));



            //GESTION DU TRI
            let selecTri = document.querySelector('#tri')
             selecTri.addEventListener('change', function(){
                    let idTri = this.value
                    if(requestParams.idTri !== []){
                        requestParams.idTri.shift();
                        requestParams.idTri.push(idTri);
                    }else{
                        requestParams.idTri.push(idTri);

                    }
                    sendFilters(requestParams, ressourcesBox)
            });
            


    //GESTION DES FILTRES 
        let checkboxes = document.querySelectorAll('.filters');

        checkboxes.forEach(checkbox => checkbox.addEventListener('click', function(e){
            let idCheck = this.id.split('-');
            idCheck = parseInt(idCheck[1])
            if(requestParams.idCheck.includes(idCheck)){
                let index = requestParams.idCheck.indexOf(idCheck);
                requestParams.idCheck.splice(index, 1)
            }else{
           requestParams.idCheck = [...requestParams.idCheck, idCheck]

            }
            sendFilters(requestParams, ressourcesBox);

        }));
        })

        function loadDataForNewsFeed(data, commentsBox){
            let commentsBoxDatas = commentsBox.id.split('-');
            let boxId = parseInt(commentsBoxDatas[2]);
            commentsBox.innerHTML = "";

            for (let i = 0; i < data.length; i++) {
                if(boxId === data[i].ressource){


                let eachComment = document.createElement("li");
                eachComment.setAttribute('class', 'comment mt-2')
                eachComment.innerHTML = `<a class="pull-left" href="javascript:void(0);">
              <img class="avatar rounded-circle" src="https://bootdey.com/img/Content/avatar/avatar1.png" style="width: 5%"alt="avatar">
            </a>
            <h5 class="user a">${data[i].user.firstName} ${data[i].user.lastName}  a commenté</h5><a href="#"><i class="fas fa-reply ml-2"></i></a>
             {#<p class="time">#}
             {#                               {% if comments.updatedAt is not null %}#}
             {#                                   {{ comments.updatedAt|date('Y-m-d H:i:s')  }}#}
             {#                               {% else %}#}
             {#                                   {{ comments.createdAt|date('Y-m-d H:i:s')  }}#}
             {#                               {% endif %}#}
             {#                           </p>#}
            <div class="comment-body">
              <div>
                <p>${data[i].contenu}</p>
              </div>
            </div>
          `;

                commentsBox.appendChild(eachComment);
                }
            }
        }

        function initCommentsNewFeed(){
            const xhr = new XMLHttpRequest();
            xhr.open('GET', '{{ path('get_all_comments') }}', true);
            xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
            xhr.onreadystatechange = function() { //Appelle une fonction au changement d'état.
                if (this.readyState === XMLHttpRequest.DONE && this.status === 200) {

                    let data = xhr.response;

                    for (let i = 0; i < data.length; i++){
                        if(document.querySelector('#comments-box-'+data[i].ressource) !== null){
                            loadDataForNewsFeed(data, document.querySelector('#comments-box-'+data[i].ressource))
                        }
                    }

                    // data.forEach(comment => loadDataForNewsFeed(data, document.querySelector('#comments-box-'+comment.ressource)))
                }
            }
            xhr.responseType = 'json';
            xhr.send();
        }





    // ENVOIE DE FILTRES
        function sendFilters(requestParams, ressourcesBox){
            const xhr = new XMLHttpRequest();
            xhr.open('POST', '{{ path('filtre')}}', true);
            xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
            xhr.onreadystatechange = function() { //Appelle une fonction au changement d'état.
                if (this.readyState === XMLHttpRequest.DONE && this.status === 200) {

            loadDataFiltered(xhr.response, ressourcesBox)
            }

           
           }
             xhr.responseType = 'json';
            xhr.send(JSON.stringify(requestParams));    
        }

    // CHARGEMENT DES DONNEES FILTREES
        function loadDataFiltered(data, ressourcesBox){
            ressourcesBox.innerHTML = '';
            for(let i = 0; i< data.length; i++){
                 

                console.log(data[i])
                if(data[i].video !== null){
                    let eachVideo = document.createElement("div");
                    eachVideo.setAttribute('class', 'card w-75  my-5');
                    eachVideo.innerHTML = `<div class="card-header">
                <img src="https://bootdey.com/img/Content/avatar/avatar1.png" class="rounded-circle avatar a" style="width: 10%" alt="user profile image">
                <p class="a ml-2"><a href="#">${data[i].user.firstName} ${data[i].user.lastName} </a></p>
                <div class="favoris a">
                </div>
            </div>
            <div class="card-body">
                <h5 class="card-title">${data[i].video.titre}</h5>
                <p>${data[i].video.description}</p>
                <div class="card-text text-center">
                    <div class="embed-responsive embed-responsive-16by9">
                        <video class="embed-responsive-item" controls><source src="../uploads/${data[i].video.video}" type="video/mp4"></video>
                    </div>
                    <div class="post-description">
                    </div>
                </div>

            </div>
            <div class="card-footer">
                    <input id="comments-${data[i].video.id}" class="form-control comments_contenu w-75 all-comments" name="comments" type="text" placeholder="Saisissez votre commentaire">


                <div class="post-footer">

                    <ul id="comments-box-${data[i].video.id}" class="comments-list">

                    </ul>
                </div>
            </div>`
             ressourcesBox.appendChild(eachVideo);


            }else if(data[i].photo !== null){
                let eachPhoto = document.createElement("div");
                eachPhoto.setAttribute('class', 'card w-75  my-5');
                eachPhoto.innerHTML = `<div class="card-header">
            <img src="https://bootdey.com/img/Content/avatar/avatar1.png" class="rounded-circle avatar a" style="width: 10%" alt="user profile image">
            <p class="a ml-2"><a href="#">${data[i].user.firstName} ${data[i].user.lastName} </a></p>
            <div class="favoris a">
            </div>
        </div>
        <div class="card-body">
            <h5 class="card-title">${data[i].photo.titre}</h5>
            <p>${data[i].photo.description}</p>
            <div class="card-text text-center">
                <img class="img-fluid" src="../uploads/${data[i].photo.image}"/>
                <div class="post-description">
                </div>
            </div>

        </div>
        <div class="card-footer">
                <input id="comments-${data[i].photo.id}" class="form-control comments_contenu w-75 all-comments" name="comments" type="text" placeholder="Saisissez votre commentaire">


            <div class="post-footer">

                <ul id="comments-box-${data[i].photo.id}" class="comments-list">

                </ul>
            </div>
        </div>
    </div>
</div>
        </div>`  
        ressourcesBox.appendChild(eachPhoto);
 
         //EVENEMENT
            }else if(data[i].evenement !== null){
                let date1 = new Date(data[i].evenement.dateDebut.date);
                let date2 = new Date(data[i].evenement.dateFin.date);
                let heure1 = new Date(data[i].evenement.heureDebut.date)
                let heure2 = new Date(data[i].evenement.heureFin.date)
                date1 = date1.toLocaleDateString();
                date2 = date2.toLocaleDateString();
                heure1 = heure1.toLocaleTimeString();
                heure2 = heure2.toLocaleTimeString();
                
                let eachEvenement = document.createElement("div");
                eachEvenement.setAttribute('class', 'card w-75  my-5');
                eachEvenement.innerHTML = `<div class="card-header">
                 <img src="https://bootdey.com/img/Content/avatar/avatar1.png" class="rounded-circle avatar a" style="width: 10%" alt="user profile image">
                 <p class="a ml-2"><a href="#">${data[i].user.firstName} ${data[i].user.lastName}</a></p>
                 <div class="favoris a">
                 </div>
             </div>
             <div class="card-body">
                 <h5 class="card-title">${data[i].evenement.titre}</h5>
                 <p>${data[i].evenement.description}</p>
                 <div class="card-text text-center">
                     <table class="table">
                         <thead>
                         <tr>
                             <th>
                                 Date de début
                             </th>
                             <th>
                                 Heure de début
                             </th>
                             <th>
                                 Date de fin
                             </th>
                             <th>
                                 Heure de fin
                             </th>
                         </tr>
                         </thead>
                         <tbody>
                         <tr>
                             <td>${date1}</td>
                             <td>${heure1}</td>
                             <td>${date2}</td>
                             <td>${heure2}</td>
                         </tr>
                         </tbody>
                     </table>
                 </div>

             </div>
             <div class="card-footer">
                     <input id="comments-${data[i].evenement.id}" class="form-control comments_contenu w-75 all-comments" name="comments" type="text" placeholder="Saisissez votre commentaire">
                 <div class="post-footer">
                     <ul id="comments-box-${data[i].evenement.id}" class="comments-list">

                     </ul>
                 </div>
             </div>`
             ressourcesBox.appendChild(eachEvenement);

            }else if( data[i].information !== null){
                let eachInformation = document.createElement("div");
                eachInformation.setAttribute('class', 'card w-75  my-5');
                eachInformation.innerHTML =`<div class="card-header">
                 <img src="https://bootdey.com/img/Content/avatar/avatar1.png" class="rounded-circle avatar a" style="width: 10%" alt="user profile image">
                 <p class="a ml-2"><a href="#">${data[i].user.firstName} ${data[i].user.lastName} </a></p>
                 <div class="favoris a">
                 </div>
             </div>
             <div class="card-body">
                 <h5 class="card-title">${data[i].information.titre}</h5>
                 <h6 class="card-subtitle"></h6>
                 <div class="card-text">
                     <p>${data[i].information.description}</p>
                     <p>${data[i].information.contenu}</p>
                 </div>

             </div>
             <div class="card-footer">

                     <input id="comments-${data[i].information.id}" class="form-control comments_contenu w-75 all-comments" name="comments" type="text" placeholder="Saisissez votre commentaire">


                 <div class="post-footer">

                     <ul id="comments-box-${data[i].information.id}" class="comments-list">

                     </ul>
                 </div>
             </div>`
             ressourcesBox.appendChild(eachInformation);
            }else if(data[i].article !== null){
                let eachArticle = document.createElement("div");
                eachArticle.setAttribute('class', 'card w-75  my-5');
                eachArticle.innerHTML =`               <div class="card-header">
                    <img src="https://bootdey.com/img/Content/avatar/avatar1.png" class="rounded-circle avatar a" style="width: 10%" alt="user profile image">
                    <p class="a ml-2"><a href="#">${data[i].user.firstName} ${data[i].user.lastName}</a></p>
                    <div class="favoris a">
                    </div>
                </div>
                <div class="card-body">
                    <h5 class="card-title">${data[i].article.titre}</h5>
                    <h6 class="card-subtitle">${data[i].article.description}</h6>
                    <div class="card-text">
                        <div class="row">
                            <div class="col-5">
                                    <img src="../uploads/${data[i].article.photo}" class="image img-fluid" alt="ancienne image" >
                            </div>
                            <div class="col-7">
                                    <div class="embed-responsive embed-responsive-16by9">
                                        <video class="embed-responsive-item" controls><source src="../uploads/${data[i].article.video}" type="video/mp4"></video>
                                    </div>
                            </div>
                        </div>
                    </div>

                </div>
                <div class="card-footer">


                        <input id="comments-${data[i].article.id}" class="form-control comments_contenu w-75 all-comments" type="text" placeholder="Saisissez votre commentaire">


                    <div class="post-footer">

                        <ul id="comments-box-${data[i].article.id}" class="comments-list">

                        </ul>
                    </div>
                </div>`
             ressourcesBox.appendChild(eachArticle);

                
            }



            }

            
        }




        function initRessources(){
            const xhr = new XMLHttpRequest();
            xhr.open('GET', '{{ path('filtre') }}', true);
            xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
            xhr.onreadystatechange = function() { //Appelle une fonction au changement d'état.
                if (this.readyState === XMLHttpRequest.DONE && this.status === 200) {

                    let data = xhr.response;

                    for (let i = 0; i < data.length; i++){
                        if(document.querySelector('.boxFilActu-'+data[i].ressource) !== null){
                            //loadDataFiltered(data, document.querySelector('.boxFilActu-'+data[i].ressource));
                        }
                    }

                    // data.forEach(comment => loadDataForNewsFeed(data, document.querySelector('#comments-box-'+comment.ressource)))
                }
            }
            xhr.responseType = 'json';
            xhr.send();
        }



        
    </script>
{% endblock %}
