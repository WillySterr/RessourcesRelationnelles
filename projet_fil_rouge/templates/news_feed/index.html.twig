{% extends 'base.html.twig' %}

{% block title %}Fil d'actualité{% endblock %}
{% block stylesheets %}
    <style>
        html {
            scroll-behavior: smooth;
        }
        #btnTop{
            display: none;
            position: fixed;
            bottom: 80px;
            right: 20px;
            z-index: 99;
            background-color: #1b2838;
            font-size: 15px;
            border: none;
            outline: none;
            color: white;
            cursor: pointer;
        }

        ul{
            list-style-type: none;
        }
        body{
            background-color: #eee;
        }
        .h7 {
            font-size: 0.8rem;
        }

        .container{
            width: 100%;
        }

        .card-body{
            overflow-y: scroll;
            scroll-behavior: smooth;
            height: 40rem;
        }
        .card-text{
            text-overflow: ellipsis;
        }

        .card-header{
            background-color: #1b2838 !important;
            color: #eee;
        }

        .card-footer{
            background-color: #1b2838 !important;
        }

        .card-footer button{
            background-color: #1b2838 !important;
            border: solid 0px;
        }

        .badge-primary{
            background-color: #1b2838 !important;
        }

        textarea{
            overflow: hidden;
            width:100%;
        }

        .commentaire{
            margin: 20px 5px;
        }

        .comemntaire div{
            margin: 5px;
        }

        .card-footer textarea{
            padding: 8px;
            border-radius: 5px;
        }

        .commentaires{
            max-height: 200px;
            overflow-y: auto;
            scroll-behavior: smooth;
        }
        .card-title{
            color: #007bff !important;
        }

    .sidenav {
  width: 0; /* 0 width - change this with JavaScript */
  z-index: 1; /* Stay on top */
  top: 0; /* Stay at the top */
  left: 0;
  position: fixed;
  background-color:#1b2838; /* Black*/
  overflow-x: hidden; /* Disable horizontal scroll */
  padding-top: 60px; /* Place content 60px from the top */
  transition: 0.5s; /* 0.5 second transition effect to slide in the sidenav */
}

/* The navigation menu links */
.sidenav a {
  padding: 8px 8px 8px 32px;
  text-decoration: none;
  font-size: 25px;
  color: #818181;
  display: block;
  transition: 0.3s;
}
.sidenav h3{
    color: white;
    text-align: center;
}
/* When you mouse over the navigation links, change their color */
.sidenav a:hover {
  color: #f1f1f1;
}

/* Position and style the close button (top right corner) */
.sidenav .closebtn {
  position: absolute;
  top: 0;
  right: 25px;
  font-size: 36px;
  margin-left: 50px;
}

/* Style page content - use this if you want to push the page content to the right when you open the side navigation */
.main {
  transition: margin-left .1s;
  padding: 20px;
}

/* On smaller screens, where height is less than 450px, change the style of the sidenav (less padding and a smaller font size) */
@media screen and (max-height: 450px) {
  .sidenav {padding-top: 15px;}
  .sidenav a {font-size: 18px;}
}
    </style>
{% endblock %}


{% block body %}
    <!-- Sidebar -->
  <div id="mySidenav" class="sidenav">
            <h3>Filtres et Tris</h3>
          <a href="javascript:void(0)" class="closebtn" id="closeTri">&times;</a>
            <ul class="list-group list-unstyled components">
            {% for category in categories %}
                <li class="list-group-item"><input id="checkbox-{{ category.id }}" class="form-check-input filters" type="checkbox"><label class="form-check-label" for="checkbox-{{category.id}}">{{ category.name }} </label></li>
            {% endfor %}
            </ul>
            <select class="form-control" id="tri">
                <option class="tries" disabled selected>Sélectionnez un tri</option>
                <option class="tries" value="decroissant">Du + récent au - récent</option>    
                <option class="tries" value="croissant">Du - récent au + récent</option>    
            </select>

</div>
<div  class="container mt-5">

                <button id='triButton' class="btn btn-sm btn-dark"><i class="fas fa-filter"></i></button>

    <div id="boxFilActu" class="row justify-content-center main">
    
    {# {% for new in news %}

         {% include 'news_feed/photo.html.twig' %}

         {% include 'news_feed/articles.html.twig' %}

         {% include 'news_feed/video.html.twig' %}

         {% include 'news_feed/informations.html.twig' %}

         {% include 'news_feed/evenement.html.twig' %}
      
    {% endfor %} #}

    </div>

        <button id="btnTop"  class="btn-large btn-floating">
            <i class="fa fa-arrow-up"></i>
        </button>

</div>
{% endblock %}

{% block javascripts %}
<script>

        document.addEventListener('DOMContentLoaded', function(){
            const xhr = new XMLHttpRequest();
            let comments = document.querySelectorAll('.all-comments');
            let ressourcesBox = document.querySelector('#boxFilActu');
            let requestParams = {
                idCheck : [],
                idTri: []
            }
            let id, commentBox;
            sendFilters(requestParams, ressourcesBox);
            initCommentsNewFeed();

                    /* Set the width of the side navigation to 250px */
            document.querySelector("#triButton").addEventListener('click', function(){

                     document.querySelector("#mySidenav").style.width = "200px";
            })
            document.querySelector("#closeTri").addEventListener('click', function(){

                document.querySelector("#mySidenav").style.width = "0";
            })
            

            comments.forEach(comment => comment.addEventListener('click', function(e){
                let ressourceId = this.id.split('-');
                id = parseInt(ressourceId[1]);
                commentBox = document.querySelector('#comments-box-'+id);
            }))
            comments.forEach(comment => comment.addEventListener('keypress', function(e){
                if(e.key === "Enter"){
                    const requestParams = {
                        "idRessource" : id,
                        "comments": comment.value
                    }

                    xhr.open('POST', '{{ path('new_comments') }}', true);
                    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
                    xhr.onreadystatechange = function() { //Appelle une fonction au changement d'état.
                        if (this.readyState === XMLHttpRequest.DONE && this.status === 200) {
                            initCommentsNewFeed(xhr);
                            comment.value = "";
                        }
                    }
                    xhr.responseType = 'json';
                    xhr.send(JSON.stringify(requestParams));
                }
            }));



            //GESTION DU TRI
            let selecTri = document.querySelector('#tri')
             selecTri.addEventListener('change', function(){
                    let idTri = this.value
                    if(requestParams.idTri !== []){
                        requestParams.idTri.shift();
                        requestParams.idTri.push(idTri);
                    }else{
                        requestParams.idTri.push(idTri);

                    }
                    sendFilters(requestParams, ressourcesBox)
            });
            


    //GESTION DES FILTRES 
        let checkboxes = document.querySelectorAll('.filters');

        checkboxes.forEach(checkbox => checkbox.addEventListener('click', function(e){
            let idCheck = this.id.split('-');
            idCheck = parseInt(idCheck[1])
            if(requestParams.idCheck.includes(idCheck)){
                let index = requestParams.idCheck.indexOf(idCheck);
                requestParams.idCheck.splice(index, 1)
            }else{
           requestParams.idCheck = [...requestParams.idCheck, idCheck]

            }
            sendFilters(requestParams, ressourcesBox);

        }));

        })

        function loadDataForNewsFeed(data, commentsBox){
            let commentsBoxDatas = commentsBox.id.split('-');
            let boxId = parseInt(commentsBoxDatas[2]);
            commentsBox.innerHTML = "";

            for (let i = 0; i < data.length; i++) {
                if(boxId === data[i].ressource){


                let eachComment = document.createElement("li");
                eachComment.setAttribute('class', 'comment mt-2')
                eachComment.innerHTML = `<a class="pull-left" href="javascript:void(0);">
              <img class="avatar rounded-circle" src="https://bootdey.com/img/Content/avatar/avatar1.png" style="width: 5%"alt="avatar">
            </a>
            <h5 class="user a">${data[i].user.firstName} ${data[i].user.lastName}  a commenté</h5><a href="#"><i class="fas fa-reply ml-2"></i></a>
             {#<p class="time">#}
             {#                               {% if comments.updatedAt is not null %}#}
             {#                                   {{ comments.updatedAt|date('Y-m-d H:i:s')  }}#}
             {#                               {% else %}#}
             {#                                   {{ comments.createdAt|date('Y-m-d H:i:s')  }}#}
             {#                               {% endif %}#}
             {#                           </p>#}
            <div class="comment-body">
              <div>
                <p>${data[i].contenu}</p>
              </div>
            </div>
          `;

                commentsBox.appendChild(eachComment);
                }
            }
        }

        function initCommentsNewFeed(){
            const xhr = new XMLHttpRequest();
            xhr.open('GET', '{{ path('get_all_comments') }}', true);
            xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
            xhr.onreadystatechange = function() { //Appelle une fonction au changement d'état.
                if (this.readyState === XMLHttpRequest.DONE && this.status === 200) {

                    let data = xhr.response;

                    for (let i = 0; i < data.length; i++){
                        if(document.querySelector('#comments-box-'+data[i].ressource) !== null){
                            loadDataForNewsFeed(data, document.querySelector('#comments-box-'+data[i].ressource))
                        }
                    }

                    // data.forEach(comment => loadDataForNewsFeed(data, document.querySelector('#comments-box-'+comment.ressource)))
                }
            }
            xhr.responseType = 'json';
            xhr.send();
        }

    // ENVOIE DE FILTRES
        function sendFilters(requestParams, ressourcesBox){
            const xhr = new XMLHttpRequest();
            xhr.open('POST', '{{ path('filtre')}}', true);
            xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
            xhr.onreadystatechange = function() { //Appelle une fonction au changement d'état.
                if (this.readyState === XMLHttpRequest.DONE && this.status === 200) {

            loadDataFiltered(xhr.response, ressourcesBox)
            }

           
           }
             xhr.responseType = 'json';
            xhr.send(JSON.stringify(requestParams));    
        }

    // CHARGEMENT DES DONNEES FILTREES
        function loadDataFiltered(data, ressourcesBox){
            ressourcesBox.innerHTML = '';
            for(let i = 0; i< data.length; i++){
                 
                if(data[i].video !== null){
                    let categoryOfRessource = '<div class="category">';

                    for (let j = 0; j < data[i].category.length; j++){
                        categoryOfRessource += '<span class="badge badge-primary mr-2">'+data[i].category[j]+'</span>'
                    }
                    categoryOfRessource += '</div>';

                    let checkFav = '<i ';
                    if(data[i].favoriId){
                        checkFav += 'class="fas fa-star" onclick="removeFav('+data[i].favoriId+')">'
                    }
                    else{
                        checkFav += 'class="far fa-star" onclick="addFav('+data[i].id+')">'
                    }
                    checkFav += '</i>';

                    let eachVideo = document.createElement("div");
                    eachVideo.setAttribute('class', 'col-sm-12 col-md-6 mb-2');
                    eachVideo.innerHTML = `<div class="card">
                        <div class="card-header">
                            <div class="d-flex justify-content-between align-items-center">
                                <div class="d-flex justify-content-between align-items-center">
                                    <div class="mr-2">
                                        <img class="rounded-circle" width="45" src="/uploads/avatars/${data[i].user.avatarIcon}" alt="">
                                    </div>
                                    <div class="ml-2">
                                        <div class="h5 m-0">${data[i].user.firstName} ${data[i].user.lastName}</div>
                                        <div id="Created" class="text-muted h7"> <i class="far fa-clock"></i>10 min ago</div>
                                    </div>
                                </div>
                                <div>
                                    ${checkFav}
                                </div>
                            </div>
                        </div>
                        <div class="card-body d-flex flex-column justify-content-between">
                            <div class="title-description">
                                <a class="card-link" href="#">
                                    <h5 class="card-title">${data[i].video.titre}</h5>
                                </a>
                                <p class="card-text">
                                    ${data[i].video.description}
                                </p>
                            </div>
                            <div class="embed-responsive embed-responsive-16by9">
                                <video width="500" height="360" controls>
                                    <source src="/images/vichFiles/${data[i].video.video}" type="video/mp4">
                                    Your browser does not support the video tag.
                                </video>
                            </div>
                            ${categoryOfRessource}
                        </div>
                        <div class="card-footer">

                            <button class="btn btn-primary comments-link" id="1" onclick="getRessourceComment(${data[i].id});"><i class="far fa-comment"></i> Comment</button>

                            <div id="block-comments-${data[i].id}" style="display: none; color:#FFF;">
                                <div class="d-flex justify-content-between">
                                     <input type="text" class="form-control" onkeypress="sendComments(event, ${data[i].id})" id="textarea-comments-${data[i].id}" placeholder="Tapez votre commentaire..."/>
                                </div>
                                <div class="commentaires">
                                    <div class="commentaire" id="list-comments-${data[i].id}">

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>`
             ressourcesBox.appendChild(eachVideo);


            }else if(data[i].photo !== null){

                let categoryOfRessource = '<div class="category">';
                let checkFav = '<i ';
                if(data[i].favoriId){
                    checkFav += 'class="fas fa-star" onclick="removeFav('+data[i].favoriId+')">'
                }
                else{
                    checkFav += 'class="far fa-star" onclick="addFav('+data[i].id+')">'
                }
                checkFav += '</i>';


                for (let j = 0; j < data[i].category.length; j++){
                    categoryOfRessource += '<span class="badge badge-primary mr-2">'+data[i].category[j]+'</span>'
                }
                categoryOfRessource += '</div>';


                let eachPhoto = document.createElement("div");
                eachPhoto.setAttribute('class', 'col-sm-12 col-md-6 mb-2');
                eachPhoto.innerHTML = `<div class="card">
                        <div class="card-header">
                            <div class="d-flex justify-content-between align-items-center">
                                <div class="d-flex justify-content-between align-items-center">
                                    <div class="mr-2">
                                        <img class="rounded-circle" width="45" src="/uploads/avatars/${data[i].user.avatarIcon}" alt="">
                                    </div>
                                    <div class="ml-2">
                                        <div class="h5 m-0">${data[i].user.firstName} ${data[i].user.lastName}</div>
                                        <div id="Created" class="text-muted h7"> <i class="far fa-clock"></i>10 min ago</div>
                                    </div>
                                </div>
                                <div>
                                    ${checkFav}
                                </div>
                            </div>
                        </div>
                        <div class="card-body d-flex flex-column justify-content-between">
                            <div class="title-description">
                                <a class="card-link" href="#">
                                    <h5 class="card-title">${data[i].photo.titre}</h5>
                                </a>
                                <p class="card-text">
                                    ${data[i].photo.description}
                                </p>
                            </div>
                            <div class="img">
                                <img src="/images/vichFiles/${data[i].photo.image}" class="card-img" alt="photo">
                            </div>

                            ${categoryOfRessource}

                        </div>
                        <div class="card-footer">

                            <button class="btn btn-primary comments-link" id="1" onclick="getRessourceComment(${data[i].id});"><i class="far fa-comment"></i> Comment</button>

                            <div id="block-comments-${data[i].id}" style="display: none; color:#FFF;">
                                <div class="d-flex justify-content-between">
                                     <input type="text" class="form-control" onkeypress="sendComments(event, ${data[i].id})" id="textarea-comments-${data[i].id}" placeholder="Tapez votre commentaire..."/>
                                </div>
                                <div class="commentaires">
                                    <div class="commentaire" id="list-comments-${data[i].id}">

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>`
        ressourcesBox.appendChild(eachPhoto);
 
         //EVENEMENT
            }else if(data[i].evenement !== null){
                let date1 = new Date(data[i].evenement.dateDebut.date);
                let date2 = new Date(data[i].evenement.dateFin.date);
                let heure1 = new Date(data[i].evenement.heureDebut.date)
                let heure2 = new Date(data[i].evenement.heureFin.date)
                date1 = date1.toLocaleDateString();
                date2 = date2.toLocaleDateString();
                heure1 = heure1.toLocaleTimeString();
                heure2 = heure2.toLocaleTimeString();

                    let checkFav = '<i ';
                    if(data[i].favoriId){
                        checkFav += 'class="fas fa-star" onclick="removeFav('+data[i].favoriId+')">'
                    }
                    else{
                        checkFav += 'class="far fa-star" onclick="addFav('+data[i].id+')">'
                    }
                    checkFav += '</i>';

                    let categoryOfRessource = '<div class="category">';

                    for (let j = 0; j < data[i].category.length; j++){
                        categoryOfRessource += '<span class="badge badge-primary mr-2">'+data[i].category[j]+'</span>'
                    }
                    categoryOfRessource += '</div>';
                let eachEvenement = document.createElement("div");
                eachEvenement.setAttribute('class', 'col-sm-12 col-md-6 mb-2');
                eachEvenement.innerHTML = `<div class="card">
                         <div class="card-header">
                            <div class="d-flex justify-content-between align-items-center">
                                <div class="d-flex justify-content-between align-items-center">
                                    <div class="mr-2">
                                        <img class="rounded-circle" width="45" src="/uploads/avatars/${data[i].user.avatarIcon}" alt="">
                                    </div>
                                    <div class="ml-2">
                                        <div class="h5 m-0">${data[i].user.firstName} ${data[i].user.lastName}</div>
                                        <div id="Created" class="text-muted h7"> <i class="far fa-clock"></i>10 min ago</div>
                                    </div>
                                </div>
                                <div>
                                    ${checkFav}
                                </div>
                            </div>
                        </div>
                        <div class="card-body d-flex flex-column justify-content-between">
                            <div class="title-description">
                                <div id="DateEvent" class="text-muted h7 mb-2"> <i class="far fa-clock"></i>l'Evènement se déroulera du ${date1} à ${heure1} et se terminera le ${date2} à ${heure2}</div>
                                <a class="card-link" href="#">
                                    <h5 class="card-title">${data[i].evenement.titre}</h5>
                                </a>
                            </div>
                            <div class="text">
                                <p class="card-text">
                                   ${data[i].evenement.description}
                                </p>
                            </div>
                           ${categoryOfRessource}
                        </div>
                        <div class="card-footer">

                            <button class="btn btn-primary comments-link" id="1" onclick="getRessourceComment(${data[i].id});"><i class="far fa-comment"></i> Comment</button>

                            <div id="block-comments-${data[i].id}" style="display: none; color:#FFF;">
                                <div class="d-flex justify-content-between">
                                     <input type="text" class="form-control" onkeypress="sendComments(event, ${data[i].id})" id="textarea-comments-${data[i].id}" placeholder="Tapez votre commentaire..."/>
                                </div>
                                <div class="commentaires">
                                    <div class="commentaire" id="list-comments-${data[i].id}">

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>`
             ressourcesBox.appendChild(eachEvenement);

            }else if(data[i].information !== null){
                    let categoryOfRessource = '<div class="category">';
                    let checkFav = '<i ';
                    if(data[i].favoriId){
                        checkFav += 'class="fas fa-star" onclick="removeFav('+data[i].favoriId+')">'
                    }
                    else{
                        checkFav += 'class="far fa-star" onclick="addFav('+data[i].id+')">'
                    }
                    checkFav += '</i>';

                    for (let j = 0; j < data[i].category.length; j++){
                        categoryOfRessource += '<span class="badge badge-primary mr-2">'+data[i].category[j]+'</span>'
                    }

                    categoryOfRessource += '</div>';
                let eachInformation = document.createElement("div");
                eachInformation.setAttribute('class', 'col-sm-12 col-md-6 mb-2');
                eachInformation.innerHTML =` <div class="card">
                       <div class="card-header">
                            <div class="d-flex justify-content-between align-items-center">
                                <div class="d-flex justify-content-between align-items-center">
                                    <div class="mr-2">
                                        <img class="rounded-circle" width="45" src="/uploads/avatars/${data[i].user.avatarIcon}" alt="">
                                    </div>
                                    <div class="ml-2">
                                        <div class="h5 m-0">${data[i].user.firstName} ${data[i].user.lastName}</div>
                                        <div id="Created" class="text-muted h7"> <i class="far fa-clock"></i>10 min ago</div>
                                    </div>
                                </div>
                                <div>
                                    ${checkFav}
                                </div>
                            </div>
                        </div>
                        <div class="card-body d-flex flex-column justify-content-between">
                            <div class="title">
                                <a class="card-link" href="#">
                                    <h5 class="card-title">${data[i].information.titre}</h5>
                                </a>
                            </div>
                            <div class="description">
                                <p class="card-text">
                                    ${data[i].information.contenu}
                                </p>
                            </div>
                            ${categoryOfRessource}
                        </div>
                         <div class="card-footer">

                            <button class="btn btn-primary comments-link" id="1" onclick="getRessourceComment(${data[i].id});"><i class="far fa-comment"></i> Comment</button>

                            <div id="block-comments-${data[i].id}" style="display: none; color:#FFF;">
                                <div class="d-flex justify-content-between">
                                     <input type="text" class="form-control" onkeypress="sendComments(event, ${data[i].id})" id="textarea-comments-${data[i].id}" placeholder="Tapez votre commentaire..."/>
                                </div>
                                <div class="commentaires">
                                    <div class="commentaire" id="list-comments-${data[i].id}">

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>`
             ressourcesBox.appendChild(eachInformation);
            }else if(data[i].article !== null){
                    let categoryOfRessource = '<div class="category">';
                    let checkFav = '<i ';
                    if(data[i].favoriId){
                        checkFav += 'class="fas fa-star" onclick="removeFav('+data[i].favoriId+')">'
                    }
                    else{
                        checkFav += 'class="far fa-star" onclick="addFav('+data[i].id+')">'
                    }
                    checkFav += '</i>';

                    for (let j = 0; j < data[i].category.length; j++){
                        categoryOfRessource += '<span class="badge badge-primary">'+data[i].category[j]+'</span>'
                    }

                    categoryOfRessource += '</div>';

                let eachArticle = document.createElement("div");
                eachArticle.setAttribute('class', 'col-sm-12 col-md-6 mb-2');
                    eachArticle.innerHTML = `<div class="card">
                        <div class="card-header">
                            <div class="d-flex justify-content-between align-items-center">
                                <div class="d-flex justify-content-between align-items-center">
                                    <div class="mr-2">
                                        <img class="rounded-circle" width="45" src="/uploads/avatars/${data[i].user.avatarIcon}" alt="">
                                    </div>
                                    <div class="ml-2">
                                        <div class="h5 m-0">${data[i].user.firstName} ${data[i].user.lastName}</div>
                                        <div id="Created" class="text-muted h7"> <i class="far fa-clock"></i>10 min ago</div>
                                    </div>
                                </div>
                                <div>
                                    ${checkFav}
                                </div>
                            </div>
                        </div>
                        <div class="card-body d-flex flex-column justify-content-between">
                            <div class="title-description">
                                <a class="card-link" href="#">
                                    <h5 class="card-title">${data[i].article.titre}</h5>
                                </a>
                                <p class="card-text">
                                    ${data[i].article.description}
                                </p>
                            </div>
                            <div class="img-video">
                                <img src="/images/vichFiles/${data[i].article.photo}" class="card-img img-fluid" alt="test">
                                <video class="card-img img-fluid" width="500" height="360" controls>
                                    <source src="/images/vichFiles/${data[i].article.video}" type="video/mp4">
                                    Your browser does not support the video tag.
                                </video>
                            </div>

                                ${categoryOfRessource}

                        </div>
                        <div class="card-footer">

                            <button class="btn btn-primary comments-link" id="1" onclick="getRessourceComment(${data[i].id});"><i class="far fa-comment"></i> Comment</button>

                            <div id="block-comments-${data[i].id}" style="display: none; color:#FFF;">
                                <div class="d-flex justify-content-between">
                                     <input type="text" class="form-control" onkeypress="sendComments(event, ${data[i].id})" id="textarea-comments-${data[i].id}" placeholder="Tapez votre commentaire..."/>
                                </div>
                                <div class="commentaires">
                                    <div class="commentaire" id="list-comments-${data[i].id}">

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>`
             ressourcesBox.appendChild(eachArticle);
            }
            }

            
        }


        function initRessources(){
            const xhr = new XMLHttpRequest();
            xhr.open('GET', '{{ path('filtre') }}', true);
            xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
            xhr.onreadystatechange = function() { //Appelle une fonction au changement d'état.
                if (this.readyState === XMLHttpRequest.DONE && this.status === 200) {

                    let data = xhr.response;

                    for (let i = 0; i < data.length; i++){
                        if(document.querySelector('.boxFilActu-'+data[i].ressource) !== null){
                            //loadDataFiltered(data, document.querySelector('.boxFilActu-'+data[i].ressource));
                        }
                    }

                    // data.forEach(comment => loadDataForNewsFeed(data, document.querySelector('#comments-box-'+comment.ressource)))
                }
            }
            xhr.responseType = 'json';
            xhr.send();
        }



        // Function call when click on "Comment"
        function getRessourceComment(id){
            // Recup ID Ressource
            let idRessource = id;

            //Recup bloc ressources
            let blocCommentOfRessource = document.querySelector('#block-comments-'+id);

            // Recup bloc contains list of comments

            let listCommentsOfCurrentRessource = document.querySelector('#list-comments-'+id);

            if(blocCommentOfRessource.style.display === "block"){
                blocCommentOfRessource.style.display = "none";
            }
            else{
                blocCommentOfRessource.style.display = "block";
            }

            const requestParams = {
                "idRessource" : idRessource
            }
            const xhr = new XMLHttpRequest();
            xhr.open('POST', '{{ path('get_comments') }}', true);
            xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
            xhr.onreadystatechange = function() { //Appelle une fonction au changement d'état.
                if (this.readyState === XMLHttpRequest.DONE && this.status === 200) {

                    let data = xhr.response;

                    loadData(data, listCommentsOfCurrentRessource);
                }
            }
            xhr.responseType = 'json';
            xhr.send(JSON.stringify(requestParams));



        }
        // Function to send comments

        function sendComments(event, id){


            let inputComments = document.querySelector('#textarea-comments-'+id);
            let listCommentsOfCurrentRessource = document.querySelector('#list-comments-'+id);

            const requestParamsAddComments = {
                "idRessource" : id,
                "comments": inputComments.value
            }

            const xhr = new XMLHttpRequest();

            if(event.key === "Enter"){

                xhr.open('POST', '{{ path('new_comments') }}', true);
                xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
                xhr.onreadystatechange = function() { //Appelle une fonction au changement d'état.
                    if (this.readyState === XMLHttpRequest.DONE && this.status === 200) {
                        inputComments.value = "";
                        listCommentsOfCurrentRessource.innerHTML = '';
                        let data = xhr.response;
                        loadData(data, listCommentsOfCurrentRessource);
                    }
                }
                xhr.responseType = 'json';
                xhr.send(JSON.stringify(requestParamsAddComments));

            }

        }

        // Function to load comments on the correct box

        function addFav(ressourceId){
            let ressourcesBox = document.querySelector('#boxFilActu');
            let requestParams = {
                idCheck : [],
                idTri: []
            }
            const xhr = new XMLHttpRequest();
            xhr.open('POST', '{{ path('add_fav') }}', true);
            xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
            xhr.onreadystatechange = function() { //Appelle une fonction au changement d'état.
                if (this.readyState === XMLHttpRequest.DONE && this.status === 200) {
                    if(xhr.response === true){
                        sendFilters(requestParams, ressourcesBox)
                    }
                }
            }
            xhr.responseType = 'json';
            xhr.send(ressourceId);
        }

        function removeFav(favId){
            let ressourcesBox = document.querySelector('#boxFilActu');
            let requestParams = {
                idCheck : [],
                idTri: []
            }
            const xhr = new XMLHttpRequest();
            xhr.open('POST', '{{ path('remove_fav') }}', true);
            xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
            xhr.onreadystatechange = function() { //Appelle une fonction au changement d'état.
                if (this.readyState === XMLHttpRequest.DONE && this.status === 200) {
                    if(xhr.response === true){
                        sendFilters(requestParams, ressourcesBox)
                    }
                }
            }
            xhr.responseType = 'json';
            xhr.send(favId);

        }

        function loadData(data, commentsBox){
            commentsBox.innerHTML = "";
            for (let i = 0; i < data.length; i++) {
                let eachComment = document.createElement("div");
                eachComment.setAttribute('class', 'd-flex')
                eachComment.innerHTML = ` <div class="mr-2" style="height: 100%; vertical-align: middle;">
                                            <img class="rounded-circle" width="25" src="/uploads/avatars/${data[i].user.avatar}" alt="">
                                        </div>
                                        <div class="text-commentaire d-flex flex-column justify-content-between" style="width: 100%;">
                                            <div class="ml-2 d-flex">
                                                <div class="h5 m-0">${data[i].user.firstName} ${data[i].user.lastName} </div>
                                                <div id="Created" class="text-muted h7" style="margin: 5px;"><i class="far fa-clock"></i>10 min ago</div>
                                            </div>
                                            <div style="width: 100%; vertical-align: middle;">
                                                <p>${data[i].contenu}</p>
                                            </div>
                                        </div>
          `;
                commentsBox.appendChild(eachComment);
            }
        }

</script>


    <script>
        //Get the button
        let myButton = document.getElementById("btnTop");

        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {scrollFunction()};

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                myButton.style.display = "block";
            } else {
                myButton.style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        myButton.addEventListener('click', function(){
            topFunction();
        })
    </script>
{% endblock %}
            